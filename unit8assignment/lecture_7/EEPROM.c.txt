/*
 ============================================================================
 Name        : assignments-8/7
 Author      : Mohamed Ahmed Mohamed Osman
 Version     :
 Copyright   : Your copyright notice
 Description : STM32F103C6 EEPROM DRIVER
 ============================================================================
 */

#include "EEPROM.h"

void EEPROM_INIT(void)
{
	// I2C Act as a Master
	I2C_Config I2C1CFG ;
	I2C1CFG.General_Cal_Adresse_Detection = I2C_ENGC_Enable ;
	I2C1CFG.I2C_ACK_Control = I2C_ACK_Enable ;
	I2C1CFG.ClockSpeed = I2C_SCLK_SM_100K ;
	I2C1CFG.P_Slave_Event_Callback = NULL ;
	I2C1CFG.StretchMode = I2C_StretchMode_Enable ;
	MCAL_GPIO_I2C_SET_PINS(I2C1) ;
	MCAL_I2C_INIT(I2C1, &I2C1CFG) ;

}

unsigned char EEPROM_Write_NBytes(uint16_t Memory_address ,unsigned char* data_out , uint8_t data_length )
{
	uint8_t i = 0 ;
	uint8_t buffer[256] ;
	buffer[0] = (uint8_t) (Memory_address >> 8) ;// upper Memory_address
    buffer[1] = (uint8_t) (Memory_address)    ;  // lower Memory_address
	for(i = 2 ; i < ( data_length + 2) ; i++)
	{
		buffer[i] = data_out[i-2] ;
	}
	MCAL_I2C_Master_TX(I2C1, EEPROM_Slave_Address, buffer, ( data_length + 2 ), With_Stop, Start ) ;
	return 0 ;
}

unsigned char EEPROM_Read_NBytes(uint16_t Memory_address ,uint8_t* data_in , uint8_t data_length )
{
	uint8_t buffer[2] ;
	buffer[0] = (uint8_t) (Memory_address >> 8); // upper Memory_address
	buffer[1] = (uint8_t) (Memory_address)   ;   // lower Memory_address
	MCAL_I2C_Master_TX(I2C1, EEPROM_Slave_Address, buffer,  2 , Without_Stop, Start ) ; //Write Address Only
	MCAL_I2C_Master_RX(I2C1, EEPROM_Slave_Address, data_in, data_length, With_Stop , RepeatedStart ) ; // Read data
	return 0 ;
}



